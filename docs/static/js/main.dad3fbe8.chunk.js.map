{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","placeholder","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","i","divRoot","document","getElementById","ReactDOM","render"],"mappings":"4NAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OAEQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC5CN,EAAc,MAMd,SACI,uBACIO,YAAa,oFACbC,KAAK,OACLC,MAASV,EACTW,SAlBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,aAyB/Bb,EAAYgB,UAAU,CAClBf,cAAegB,IAAUC,KAAKC,Y,mCChCrBC,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACTC,EAFY,iDAEoCF,EAFpC,6BACH,oCADG,SAGDG,MAAMD,GAHL,cAGZE,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QATvB,kBAYXK,GAZW,4CAAF,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAElC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GACzB,MAA0BnB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAbAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI3B,CAACnB,IAEIoB,EDbuBK,CAAazB,GAA/BY,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAInB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDf,KACnDmB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEWtBgB,EA5BM,WAGjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAIA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWmB,KAAI,SAACR,EAAU2B,GAAX,OACX,cAAC,EAAD,CAEA3B,SAAUA,GADHA,YCdzB4B,EAASC,SAASC,eAAe,QAEvCC,IAASC,OACP,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.dad3fbe8.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('')\r\n    const handleInputChange = (e)=> {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2) {\r\n            setCategories(categories => [ inputValue,...categories])\r\n            setinputValue('')\r\n        }\r\n        // console.log('Submit Hecho')\r\n    }\r\n    return (\r\n          \r\n            <form onSubmit = {handleSubmit}>    \r\n                <input \r\n                    placeholder= \"Escribe una o mas palabras clave para que encuentres, entre 10 GIFS, tu preferido\"\r\n                    type=\"text\"\r\n                    value = {inputValue}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n            </form>    \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories: PropTypes.func.isRequired        \r\n}","export const getGifs =async (category)=> {\r\n    const apiKey = '0OlflCxFZJXIBBBllRksBwm4T4ax31Ex';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${apiKey}`;\r\n    const resp=await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map (img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import { useState, useEffect } from \"react\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [counter, setcounter] = useState(0);\r\n    // const [images, setimages] = useState([])\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    \r\n    \r\n    return(\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando..</p> }\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map((img)=>(\r\n                        <GifGridItem\r\n                            key={img.id} \r\n                            {...img}\r\n                        />    \r\n                    ))\r\n                }\r\n            \r\n            \r\n        </div>\r\n        </>\r\n    );\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                \r\n                         \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n                \r\n            })\r\n    },[category])\r\n\r\n    return state;\r\n\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handleApp = () => {\r\n    //     setCategories([...categories, 'HunterXHunter'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map((category, i) => \r\n                        <GifGrid\r\n                        key = {category}\r\n                        category={category}\r\n\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot= document.getElementById('root')\n\nReactDOM.render(\n  <GifExpertApp />,divRoot\n);\n\n\n"],"sourceRoot":""}